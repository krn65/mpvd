firefoxforios_version,cve_id,advisory,title,reporter,impact,description,bug_id
123,['CVE-2024-26283'],2024-08,Address bar spoofing using Firefox custom open URL scheme,Muneaki Nishimura,moderate,An attacker could have executed unauthorized scripts on top origin sites using a JavaScript URI when opening an external URL with a custom Firefox scheme.,[1850158]
123,['CVE-2024-26282'],2024-08,UXSS through a canonical element,Muneaki Nishimura,moderate,Using an AMP url with a canonical element an attacker could have executed JavaScript from an opened bookmarked page.,[1863788]
123,['CVE-2024-26281'],2024-08,QR code scanner allowed executing a JavaScript URI,James Lee,moderate,Upon scanning a JavaScript URI with the QR code scanner an attacker could have executed unauthorized scripts on the current top origin sites in the URL bar.,[1868005]
120,['CVE-2023-49060'],2023-51,Privilege escalation through <a [referrerpolicy]> in ReaderMode,Muneaki Nishimura,high,An attacker could have accessed internal pages or data by ex-filtrating a security key from ReaderMode via the referrerpolicy attribute.,[1861405]
120,['CVE-2023-49061'],2023-51,HTML injection in %READER-BYLINE% of ReaderMode,Muneaki Nishimura,moderate,An attacker could have performed HTML template injection via Reader Mode and exfiltrated user information.,[1861420]
119,['CVE-2023-5758'],2023-48,Cross-Site Scripting (XSS) in reader mode,Irwan,high,When opening a page in reader mode the redirect URL could have caused attacker-controlled script to execute in a reflected Cross-Site Scripting (XSS) attack.,[1850019]
115,['CVE-2023-37455'],2023-25,Media permission request prompt showing from background tab,Kazuki Nomoto,moderate,The permission request prompt from the site in the background tab was overlaid on top of the site in the foreground tab.,[1786934]
115,['CVE-2023-37456'],2023-25,Browser crashed when session restore was called with an empty body,Artem Chaykin,low,The session restore helper crashed whenever there was no parameter sent to the message handler.,[1795496]
102,['CVE-2022-31746'],2022-27,Privileged internal URL protection could be bypassed through referrer header.,Muneaki Nishimura,moderate,Internal URLs are protected by a secret UUID key which could have been leaked to web page through the Referrer header.,[1654416]
101,['CVE-2022-1887'],2022-23,SQL injection in history tab,Muneaki Nishimura,moderate,The search term could have been specified externally to trigger SQL injection.,[1767205]
34,['CVE-2021-29958'],2021-25,File download shares private browsing mode cookies,Muneaki Nishimura,moderate,When a download was initiated the client did not check whether it was in normal or private browsing mode which led to private mode cookies being shared in normal browsing mode.,[1670127]
28,['CVE-2020-15662'],2020-34,Download JS user script can be overidden,Muneaki Nishimura,high,A rogue webpage could override the injected WKUserScript used by the download feature this exploit could result in the user downloading an unintended file.,[1653827]
28,['CVE-2020-15661'],2020-34,Login JS user script can be overidden,Muneaki Nishimura,high,A rogue webpage could override the injected WKUserScript used by the logins autofill this exploit could result in leaking a password for the current domain.,[1654131]
28,['CVE-2020-15651'],2020-34,Download Feature unicode RTLO char can fake the file extension,superxx,low,A unicode RTL order character in the downloaded file name can be used to change the file's name during the download UI flow to change the file extension.,[1649160]
27,['CVE-2020-12414'],2020-23,IndexedDB persists in private browsing mode,Konark Modi - @konarkmodi,moderate,IndexedDB should be cleared when leaving private browsing mode and it is not the API for WKWebViewConfiguration was being used incorrectly and requires the private instance of this object be deleted when leaving private mode.,[1646756]
26,['CVE-2020-12404'],2020-19,Native-to-JS bridging security token exploit,Vinoth Kumar,moderate,For native-to-JS bridging the app requires a unique token to be passed that ensures non-app code can't call the bridging functions. That token could leak when used for downloading files.,[1631739]
25,['CVE-2020-6830'],2020-15,Native-to-JS bridging security token exploit,Vinoth Kumar,moderate,For native-to-JS bridging the app requires a unique token to be passed that ensures non-app code can't call the bridging functions. That token was being used for JS-to-native also but it isn't needed in this case and its usage was also leaking this token.,[1632387]
